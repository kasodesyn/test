{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_1 = __importDefault(require(\"buffer\"));\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst Buffer = buffer_1.default.Buffer;\nfunction keccak256(value) {\n  value = toBuffer(value);\n  return (0, keccak_1.default)('keccak256').update(value).digest();\n}\nfunction toBuffer(value) {\n  if (!Buffer.isBuffer(value)) {\n    if (Array.isArray(value)) {\n      value = Buffer.from(value);\n    } else if (typeof value === 'string') {\n      if (isHexString(value)) {\n        value = Buffer.from(padToEven(stripHexPrefix(value)), 'hex');\n      } else {\n        value = Buffer.from(value);\n      }\n    } else if (typeof value === 'number') {\n      value = intToBuffer(value);\n    } else if (value === null || value === undefined) {\n      value = Buffer.allocUnsafe(0);\n    } else if (bn_js_1.default.isBN(value)) {\n      value = value.toArrayLike(Buffer);\n    } else if (value.toArray) {\n      // converts a BN to a Buffer\n      value = Buffer.from(value.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n  return value;\n}\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n  return true;\n}\nfunction padToEven(value) {\n  if (typeof value !== 'string') {\n    throw new Error(`while padding to even, value must be string, is currently ${typeof value}, while padToEven.`);\n  }\n  if (value.length % 2) {\n    value = `0${value}`;\n  }\n  return value;\n}\nfunction stripHexPrefix(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  return isHexPrefixed(value) ? value.slice(2) : value;\n}\nfunction isHexPrefixed(value) {\n  if (typeof value !== 'string') {\n    throw new Error(\"value must be type 'string', is currently type \" + typeof value + ', while checking isHexPrefixed.');\n  }\n  return value.slice(0, 2) === '0x';\n}\nfunction intToBuffer(i) {\n  const hex = intToHex(i);\n  return Buffer.from(padToEven(hex.slice(2)), 'hex');\n}\nfunction intToHex(i) {\n  const hex = i.toString(16);\n  return `0x${hex}`;\n}\nif (typeof window !== 'undefined') {\n  window.keccak256 = keccak256;\n}\nmodule.exports = keccak256;","map":{"version":3,"names":["__importDefault","mod","__esModule","bn_js_1","require","buffer_1","keccak_1","Buffer","default","keccak256","value","toBuffer","update","digest","isBuffer","Array","isArray","from","isHexString","padToEven","stripHexPrefix","intToBuffer","undefined","allocUnsafe","isBN","toArrayLike","toArray","Error","length","match","isHexPrefixed","slice","i","hex","intToHex","toString","window","module","exports"],"sources":["/Users/kasoqian/Downloads/web3-react/node_modules/keccak256/dist/keccak256.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst buffer_1 = __importDefault(require(\"buffer\"));\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst Buffer = buffer_1.default.Buffer;\nfunction keccak256(value) {\n    value = toBuffer(value);\n    return (0, keccak_1.default)('keccak256').update(value).digest();\n}\nfunction toBuffer(value) {\n    if (!Buffer.isBuffer(value)) {\n        if (Array.isArray(value)) {\n            value = Buffer.from(value);\n        }\n        else if (typeof value === 'string') {\n            if (isHexString(value)) {\n                value = Buffer.from(padToEven(stripHexPrefix(value)), 'hex');\n            }\n            else {\n                value = Buffer.from(value);\n            }\n        }\n        else if (typeof value === 'number') {\n            value = intToBuffer(value);\n        }\n        else if (value === null || value === undefined) {\n            value = Buffer.allocUnsafe(0);\n        }\n        else if (bn_js_1.default.isBN(value)) {\n            value = value.toArrayLike(Buffer);\n        }\n        else if (value.toArray) {\n            // converts a BN to a Buffer\n            value = Buffer.from(value.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return value;\n}\nfunction isHexString(value, length) {\n    if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nfunction padToEven(value) {\n    if (typeof value !== 'string') {\n        throw new Error(`while padding to even, value must be string, is currently ${typeof value}, while padToEven.`);\n    }\n    if (value.length % 2) {\n        value = `0${value}`;\n    }\n    return value;\n}\nfunction stripHexPrefix(value) {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    return isHexPrefixed(value) ? value.slice(2) : value;\n}\nfunction isHexPrefixed(value) {\n    if (typeof value !== 'string') {\n        throw new Error(\"value must be type 'string', is currently type \" + (typeof value) + ', while checking isHexPrefixed.');\n    }\n    return value.slice(0, 2) === '0x';\n}\nfunction intToBuffer(i) {\n    const hex = intToHex(i);\n    return Buffer.from(padToEven(hex.slice(2)), 'hex');\n}\nfunction intToHex(i) {\n    const hex = i.toString(16);\n    return `0x${hex}`;\n}\nif (typeof window !== 'undefined') {\n    window.keccak256 = keccak256;\n}\nmodule.exports = keccak256;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACD,MAAME,OAAO,GAAGH,eAAe,CAACI,OAAO,CAAC,OAAO,CAAC,CAAC;AACjD,MAAMC,QAAQ,GAAGL,eAAe,CAACI,OAAO,CAAC,QAAQ,CAAC,CAAC;AACnD,MAAME,QAAQ,GAAGN,eAAe,CAACI,OAAO,CAAC,QAAQ,CAAC,CAAC;AACnD,MAAMG,MAAM,GAAGF,QAAQ,CAACG,OAAO,CAACD,MAAM;AACtC,SAASE,SAAS,CAACC,KAAK,EAAE;EACtBA,KAAK,GAAGC,QAAQ,CAACD,KAAK,CAAC;EACvB,OAAO,CAAC,CAAC,EAAEJ,QAAQ,CAACE,OAAO,EAAE,WAAW,CAAC,CAACI,MAAM,CAACF,KAAK,CAAC,CAACG,MAAM,EAAE;AACpE;AACA,SAASF,QAAQ,CAACD,KAAK,EAAE;EACrB,IAAI,CAACH,MAAM,CAACO,QAAQ,CAACJ,KAAK,CAAC,EAAE;IACzB,IAAIK,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,EAAE;MACtBA,KAAK,GAAGH,MAAM,CAACU,IAAI,CAACP,KAAK,CAAC;IAC9B,CAAC,MACI,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAChC,IAAIQ,WAAW,CAACR,KAAK,CAAC,EAAE;QACpBA,KAAK,GAAGH,MAAM,CAACU,IAAI,CAACE,SAAS,CAACC,cAAc,CAACV,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC;MAChE,CAAC,MACI;QACDA,KAAK,GAAGH,MAAM,CAACU,IAAI,CAACP,KAAK,CAAC;MAC9B;IACJ,CAAC,MACI,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAChCA,KAAK,GAAGW,WAAW,CAACX,KAAK,CAAC;IAC9B,CAAC,MACI,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKY,SAAS,EAAE;MAC5CZ,KAAK,GAAGH,MAAM,CAACgB,WAAW,CAAC,CAAC,CAAC;IACjC,CAAC,MACI,IAAIpB,OAAO,CAACK,OAAO,CAACgB,IAAI,CAACd,KAAK,CAAC,EAAE;MAClCA,KAAK,GAAGA,KAAK,CAACe,WAAW,CAAClB,MAAM,CAAC;IACrC,CAAC,MACI,IAAIG,KAAK,CAACgB,OAAO,EAAE;MACpB;MACAhB,KAAK,GAAGH,MAAM,CAACU,IAAI,CAACP,KAAK,CAACgB,OAAO,EAAE,CAAC;IACxC,CAAC,MACI;MACD,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACnC;EACJ;EACA,OAAOjB,KAAK;AAChB;AACA,SAASQ,WAAW,CAACR,KAAK,EAAEkB,MAAM,EAAE;EAChC,IAAI,OAAOlB,KAAK,KAAK,QAAQ,IAAI,CAACA,KAAK,CAACmB,KAAK,CAAC,kBAAkB,CAAC,EAAE;IAC/D,OAAO,KAAK;EAChB;EACA,IAAID,MAAM,IAAIlB,KAAK,CAACkB,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM,EAAE;IAC3C,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf;AACA,SAAST,SAAS,CAACT,KAAK,EAAE;EACtB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIiB,KAAK,CAAE,6DAA4D,OAAOjB,KAAM,oBAAmB,CAAC;EAClH;EACA,IAAIA,KAAK,CAACkB,MAAM,GAAG,CAAC,EAAE;IAClBlB,KAAK,GAAI,IAAGA,KAAM,EAAC;EACvB;EACA,OAAOA,KAAK;AAChB;AACA,SAASU,cAAc,CAACV,KAAK,EAAE;EAC3B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,OAAOA,KAAK;EAChB;EACA,OAAOoB,aAAa,CAACpB,KAAK,CAAC,GAAGA,KAAK,CAACqB,KAAK,CAAC,CAAC,CAAC,GAAGrB,KAAK;AACxD;AACA,SAASoB,aAAa,CAACpB,KAAK,EAAE;EAC1B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIiB,KAAK,CAAC,iDAAiD,GAAI,OAAOjB,KAAM,GAAG,iCAAiC,CAAC;EAC3H;EACA,OAAOA,KAAK,CAACqB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI;AACrC;AACA,SAASV,WAAW,CAACW,CAAC,EAAE;EACpB,MAAMC,GAAG,GAAGC,QAAQ,CAACF,CAAC,CAAC;EACvB,OAAOzB,MAAM,CAACU,IAAI,CAACE,SAAS,CAACc,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AACtD;AACA,SAASG,QAAQ,CAACF,CAAC,EAAE;EACjB,MAAMC,GAAG,GAAGD,CAAC,CAACG,QAAQ,CAAC,EAAE,CAAC;EAC1B,OAAQ,KAAIF,GAAI,EAAC;AACrB;AACA,IAAI,OAAOG,MAAM,KAAK,WAAW,EAAE;EAC/BA,MAAM,CAAC3B,SAAS,GAAGA,SAAS;AAChC;AACA4B,MAAM,CAACC,OAAO,GAAG7B,SAAS"},"metadata":{},"sourceType":"script"}